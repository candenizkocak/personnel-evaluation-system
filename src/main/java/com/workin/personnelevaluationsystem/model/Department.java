package com.workin.personnelevaluationsystem.model;

import jakarta.persistence.*;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;
import lombok.Builder;

import java.util.List;

@Entity
@Table(name = "Departments") // Maps to the Departments table in SQL
@Data // Lombok: Generates getters, setters, toString, equals, and hashCode
@NoArgsConstructor // Lombok: Generates a no-argument constructor
@AllArgsConstructor // Lombok: Generates a constructor with all fields
@Builder // Lombok: Provides a builder pattern for object creation
public class Department {

    @Id // Marks this field as the primary key
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Indicates that the ID is auto-generated by the DB
    @Column(name = "DepartmentID") // Maps to the DepartmentID column
    private Integer departmentID;

    @Column(name = "Name", nullable = false, length = 100) // Maps to Name column, specifies constraints
    private String name;

    @Column(name = "Description", length = 500) // Maps to Description column
    private String description;

    @Column(name = "IsActive") // Maps to IsActive column
    private Boolean isActive; // BIT in SQL maps to Boolean in Java

    // One-to-Many relationship with Position (a Department can have many Positions)
    // mappedBy indicates the field in the Position entity that owns the relationship
    // CascadeType.ALL: Operations (persist, merge, remove) on Department will cascade to associated Positions
    // orphanRemoval = true: If a Position is removed from the department.getPositions() list, it's deleted from DB
    @OneToMany(mappedBy = "department", cascade = CascadeType.ALL, orphanRemoval = true)
    private List<Position> positions;
}